services:
  airflow-webserver:
    build: .
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=${AIRFLOW_SQL_CONN}
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW_SECRET_KEY}
      - AIRFLOW__WEBSERVER__WEB_SERVER_MASTER_TIMEOUT=300
      - AIRFLOW_CONN_POSTGRES_DEFAULT=${AIRFLOW_SQL_CONN}
      - API_ID=${API_ID}
      - API_HASH=${API_HASH}
      - PHONE_NUMBER=${PHONE_NUMBER}
      - SESSION_STRING=${SESSION_STRING}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./.env:/opt/airflow/.env
    ports:
      - "8080:8080"
    restart: unless-stopped
    command: >
      bash -c "
        airflow db init &&
        airflow users create --username admin --password ${AIRFLOW_ADMIN_PASSWORD} --firstname Admin --lastname User --role Admin --email admin@example.com || true &&
        airflow webserver --port 8080
      "

  airflow-scheduler:
    build: .
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=${AIRFLOW_SQL_CONN}
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW_SECRET_KEY}
      - AIRFLOW_CONN_POSTGRES_DEFAULT=${AIRFLOW_SQL_CONN}
      - API_ID=${API_ID}
      - API_HASH=${API_HASH}
      - PHONE_NUMBER=${PHONE_NUMBER}
      - SESSION_STRING=${SESSION_STRING}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./.env:/opt/airflow/.env
    restart: unless-stopped
    command: bash -c "sleep 15 && airflow scheduler"
